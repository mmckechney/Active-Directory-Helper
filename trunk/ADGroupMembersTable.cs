//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a the TypedDataTableBuilder tool.
//     (TypedDataTableBuilder  -- Michael McKechney, author)
//		
//     Visual Studio .NET Custom Tool Setting: TypedTableBuilder
//	   Version: 3.1.1.17637
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// <autogenerated>
//------------------------------------------------------------------------------


namespace ActiveDirectoryHelper.Tables
{

	using System;
	using System.Data;
	using System.Runtime.Serialization;
	using System.Drawing;

	[Serializable()]
	[System.ComponentModel.ToolboxItem(true)]
	[System.ComponentModel.DesignerCategory("Component")]
	[System.ComponentModel.DesignTimeVisible(true)]
	[System.Drawing.ToolboxBitmap(typeof(System.Data.DataSet))]
	public class ADGroupMembersTable : DataTable, System.Collections.IEnumerable
	{
	
	
		private DataColumn columnLastName;
		private DataColumn columnFirstName;
		private DataColumn columnAccountId;
		private DataColumn columnTitle;
		private DataColumn columnEMail;
		private DataColumn columnPhone;
		private DataColumn columnDistinguishedName;
		private DataColumn columnCountry;
		private DataColumn columnStateProv;
		private DataColumn columnCity;
		private DataColumn columnStreetAddress;
		private DataColumn columnPostalCode;
		private DataColumn columnBusiness2Phone;
		private DataColumn columnManagerDN;
		private DataColumn columnUserAccountControl;
		private DataColumn columnAccountFlags;
		private DataColumn columnAccountControlComputed;
		private DataColumn columnAccountFlagsComputed;
		private DataColumn columnObjectSID;
		private DataColumn columnObjectGUID;
		private DataColumn columnAccountCreated;
		private DataColumn columnAccountLastModified;
		private DataColumn columnSearchedDomain;
		private DataColumn columnAccountStatus;
		private DataColumn columnOffice;
		private DataColumn columnDescription;
		private DataColumn columnDepartment;
		private DataColumn columnHomePhone;
		private DataColumn columnRank;
		private DataColumn columnManager;
		public  ADGroupMembersTable(): base("AD_GroupMembers_Table")
		{
			this.InitClass();
			this.InitVars();
			this.ColumnChanged += new DataColumnChangeEventHandler( myColumn_Changed );
		}
		public ADGroupMembersTable(DataTable table): base(table.TableName)
		{
			this.CaseSensitive = table.CaseSensitive;
			this.Locale = table.Locale;
			this.Namespace = table.Namespace;
			this.Prefix = table.Prefix;
			this.MinimumCapacity = table.MinimumCapacity;
			this.DisplayExpression = table.DisplayExpression;
			this.InitClass();
			this.InitVars();
			this.ColumnChanged += new DataColumnChangeEventHandler( myColumn_Changed );
			foreach(DataRow tmpRow in table.Rows)
			{
				this.ImportRow(tmpRow);
			}
		}
		public ADGroupMembersTable(SerializationInfo info, StreamingContext context):base(info,context)
		{
			this.InitVars();
			this.ColumnChanged += new DataColumnChangeEventHandler( myColumn_Changed );
		}
	
		private void myColumn_Changed( object sender, DataColumnChangeEventArgs e )
		{
			this.InitVars();
		}
		public int Count
		{
			get
			{
				return this.Rows.Count;
			}

		}
		public DataColumn LastNameColumn
		{
			get
			{
				return this.columnLastName;
			}

		}
		public DataColumn FirstNameColumn
		{
			get
			{
				return this.columnFirstName;
			}

		}
		public DataColumn AccountIdColumn
		{
			get
			{
				return this.columnAccountId;
			}

		}
		public DataColumn TitleColumn
		{
			get
			{
				return this.columnTitle;
			}

		}
		public DataColumn EMailColumn
		{
			get
			{
				return this.columnEMail;
			}

		}
		public DataColumn PhoneColumn
		{
			get
			{
				return this.columnPhone;
			}

		}
		public DataColumn DistinguishedNameColumn
		{
			get
			{
				return this.columnDistinguishedName;
			}

		}
		public DataColumn CountryColumn
		{
			get
			{
				return this.columnCountry;
			}

		}
		public DataColumn StateProvColumn
		{
			get
			{
				return this.columnStateProv;
			}

		}
		public DataColumn CityColumn
		{
			get
			{
				return this.columnCity;
			}

		}
		public DataColumn StreetAddressColumn
		{
			get
			{
				return this.columnStreetAddress;
			}

		}
		public DataColumn PostalCodeColumn
		{
			get
			{
				return this.columnPostalCode;
			}

		}
		public DataColumn Business2PhoneColumn
		{
			get
			{
				return this.columnBusiness2Phone;
			}

		}
		public DataColumn ManagerDNColumn
		{
			get
			{
				return this.columnManagerDN;
			}

		}
		public DataColumn UserAccountControlColumn
		{
			get
			{
				return this.columnUserAccountControl;
			}

		}
		public DataColumn AccountFlagsColumn
		{
			get
			{
				return this.columnAccountFlags;
			}

		}
		public DataColumn AccountControlComputedColumn
		{
			get
			{
				return this.columnAccountControlComputed;
			}

		}
		public DataColumn AccountFlagsComputedColumn
		{
			get
			{
				return this.columnAccountFlagsComputed;
			}

		}
		public DataColumn ObjectSIDColumn
		{
			get
			{
				return this.columnObjectSID;
			}

		}
		public DataColumn ObjectGUIDColumn
		{
			get
			{
				return this.columnObjectGUID;
			}

		}
		public DataColumn AccountCreatedColumn
		{
			get
			{
				return this.columnAccountCreated;
			}

		}
		public DataColumn AccountLastModifiedColumn
		{
			get
			{
				return this.columnAccountLastModified;
			}

		}
		public DataColumn SearchedDomainColumn
		{
			get
			{
				return this.columnSearchedDomain;
			}

		}
		public DataColumn AccountStatusColumn
		{
			get
			{
				return this.columnAccountStatus;
			}

		}
		public DataColumn OfficeColumn
		{
			get
			{
				return this.columnOffice;
			}

		}
		public DataColumn DescriptionColumn
		{
			get
			{
				return this.columnDescription;
			}

		}
		public DataColumn DepartmentColumn
		{
			get
			{
				return this.columnDepartment;
			}

		}
		public DataColumn HomePhoneColumn
		{
			get
			{
				return this.columnHomePhone;
			}

		}
		public DataColumn RankColumn
		{
			get
			{
				return this.columnRank;
			}

		}
		public DataColumn ManagerColumn
		{
			get
			{
				return this.columnManager;
			}

		}
		
		public ADGroupMembersTableRow this[int index]
		{
			get
			{
				return ((ADGroupMembersTableRow)(this.Rows[index]));
			}

		}
		public ADGroupMembersTableRow NewADGroupMembersTableRow()
		{
			return ((ADGroupMembersTableRow)(this.NewRow()));
		}

		public void AddADGroupMembersTableRow(ADGroupMembersTableRow row)
		{
			this.Rows.Add(row);
		}
		public bool AddADGroupMembersTableRow(String LastName,String FirstName,String AccountId,String Title,String EMail,String Phone,String DistinguishedName,String Country,String StateProv,String City,String StreetAddress,String PostalCode,String Business2Phone,String ManagerDN,int UserAccountControl,string AccountFlags,int AccountControlComputed,string AccountFlagsComputed,string ObjectSID,string ObjectGUID,DateTime AccountCreated,DateTime AccountLastModified,string SearchedDomain,string AccountStatus,string Office,string Description,string Department,string HomePhone,int Rank,ADGroupMembersTableRow Manager)
		{
			ADGroupMembersTableRow newRow = (ADGroupMembersTableRow)this.NewRow();
			try
			{	
				newRow.LastName = LastName;
				newRow.FirstName = FirstName;
				newRow.AccountId = AccountId;
				newRow.Title = Title;
				newRow.EMail = EMail;
				newRow.Phone = Phone;
				newRow.DistinguishedName = DistinguishedName;
				newRow.Country = Country;
				newRow.StateProv = StateProv;
				newRow.City = City;
				newRow.StreetAddress = StreetAddress;
				newRow.PostalCode = PostalCode;
				newRow.Business2Phone = Business2Phone;
				newRow.ManagerDN = ManagerDN;
				newRow.UserAccountControl = UserAccountControl;
				newRow.AccountFlags = AccountFlags;
				newRow.AccountControlComputed = AccountControlComputed;
				newRow.AccountFlagsComputed = AccountFlagsComputed;
				newRow.ObjectSID = ObjectSID;
				newRow.ObjectGUID = ObjectGUID;
				newRow.AccountCreated = AccountCreated;
				newRow.AccountLastModified = AccountLastModified;
				newRow.SearchedDomain = SearchedDomain;
				newRow.AccountStatus = AccountStatus;
				newRow.Office = Office;
				newRow.Description = Description;
				newRow.Department = Department;
				newRow.HomePhone = HomePhone;
				newRow.Rank = Rank;
				newRow.Manager = Manager;
				this.Rows.Add(newRow);
			}catch(Exception e)
			{
				throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTable.AddADGroupMembersTableRow(String,String,String,String,String,String,String,String,String,String,String,String,String,String,int,string,int,string,string,string,DateTime,DateTime,string,string,string,string,string,string,int,ADGroupMembersTableRow) Method",e);
			}
			return true;
			
		}
		
		protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
		{
			return new ADGroupMembersTableRow(builder);
		}
		public void RemoveADGroupMembersTableRow(ADGroupMembersTableRow row)
		{
			this.Rows.Remove(row);
		}
		protected override DataTable CreateInstance()
		{
			return new ADGroupMembersTable();
		}
		
		
		
		public System.Collections.IEnumerator GetEnumerator()
		{
			return this.Rows.GetEnumerator();
		}
		public override DataTable Clone() 
		{
			ADGroupMembersTable cln = ((ADGroupMembersTable)(base.Clone()));
			cln.InitVars();
			return cln;
		}
		internal void InitVars()
		{
			
			this.columnLastName=this.Columns["LastName"];
			
			this.columnFirstName=this.Columns["FirstName"];
			
			this.columnAccountId=this.Columns["AccountId"];
			
			this.columnTitle=this.Columns["Title"];
			
			this.columnEMail=this.Columns["EMail"];
			
			this.columnPhone=this.Columns["Phone"];
			
			this.columnDistinguishedName=this.Columns["DistinguishedName"];
			
			this.columnCountry=this.Columns["Country"];
			
			this.columnStateProv=this.Columns["StateProv"];
			
			this.columnCity=this.Columns["City"];
			
			this.columnStreetAddress=this.Columns["StreetAddress"];
			
			this.columnPostalCode=this.Columns["PostalCode"];
			
			this.columnBusiness2Phone=this.Columns["Business2Phone"];
			
			this.columnManagerDN=this.Columns["ManagerDN"];
			
			this.columnUserAccountControl=this.Columns["UserAccountControl"];
			
			this.columnAccountFlags=this.Columns["AccountFlags"];
			
			this.columnAccountControlComputed=this.Columns["AccountControlComputed"];
			
			this.columnAccountFlagsComputed=this.Columns["AccountFlagsComputed"];
			
			this.columnObjectSID=this.Columns["ObjectSID"];
			
			this.columnObjectGUID=this.Columns["ObjectGUID"];
			
			this.columnAccountCreated=this.Columns["AccountCreated"];
			
			this.columnAccountLastModified=this.Columns["AccountLastModified"];
			
			this.columnSearchedDomain=this.Columns["SearchedDomain"];
			
			this.columnAccountStatus=this.Columns["AccountStatus"];
			
			this.columnOffice=this.Columns["Office"];
			
			this.columnDescription=this.Columns["Description"];
			
			this.columnDepartment=this.Columns["Department"];
			
			this.columnHomePhone=this.Columns["HomePhone"];
			
			this.columnRank=this.Columns["Rank"];
			
			this.columnManager=this.Columns["Manager"];
			
		}
		private  void InitClass()
		{
		
			this.columnLastName = new DataColumn("LastName", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnLastName);
		
			this.columnFirstName = new DataColumn("FirstName", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnFirstName);
		
			this.columnAccountId = new DataColumn("AccountId", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnAccountId);
		
			this.columnTitle = new DataColumn("Title", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnTitle);
		
			this.columnEMail = new DataColumn("EMail", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnEMail);
		
			this.columnPhone = new DataColumn("Phone", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnPhone);
		
			this.columnDistinguishedName = new DataColumn("DistinguishedName", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnDistinguishedName);
		
			this.columnCountry = new DataColumn("Country", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnCountry);
		
			this.columnStateProv = new DataColumn("StateProv", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnStateProv);
		
			this.columnCity = new DataColumn("City", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnCity);
		
			this.columnStreetAddress = new DataColumn("StreetAddress", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnStreetAddress);
		
			this.columnPostalCode = new DataColumn("PostalCode", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnPostalCode);
		
			this.columnBusiness2Phone = new DataColumn("Business2Phone", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnBusiness2Phone);
		
			this.columnManagerDN = new DataColumn("ManagerDN", typeof(String), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnManagerDN);
		
			this.columnUserAccountControl = new DataColumn("UserAccountControl", typeof(int), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnUserAccountControl);
		
			this.columnAccountFlags = new DataColumn("AccountFlags", typeof(string), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnAccountFlags);
		
			this.columnAccountControlComputed = new DataColumn("AccountControlComputed", typeof(int), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnAccountControlComputed);
		
			this.columnAccountFlagsComputed = new DataColumn("AccountFlagsComputed", typeof(string), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnAccountFlagsComputed);
		
			this.columnObjectSID = new DataColumn("ObjectSID", typeof(string), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnObjectSID);
		
			this.columnObjectGUID = new DataColumn("ObjectGUID", typeof(string), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnObjectGUID);
		
			this.columnAccountCreated = new DataColumn("AccountCreated", typeof(DateTime), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnAccountCreated);
		
			this.columnAccountLastModified = new DataColumn("AccountLastModified", typeof(DateTime), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnAccountLastModified);
		
			this.columnSearchedDomain = new DataColumn("SearchedDomain", typeof(string), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnSearchedDomain);
		
			this.columnAccountStatus = new DataColumn("AccountStatus", typeof(string), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnAccountStatus);
		
			this.columnOffice = new DataColumn("Office", typeof(string), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnOffice);
		
			this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnDescription);
		
			this.columnDepartment = new DataColumn("Department", typeof(string), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnDepartment);
		
			this.columnHomePhone = new DataColumn("HomePhone", typeof(string), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnHomePhone);
		
			this.columnRank = new DataColumn("Rank", typeof(int), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnRank);
		
			this.columnManager = new DataColumn("Manager", typeof(ADGroupMembersTableRow), null, System.Data.MappingType.Element);
			this.Columns.Add(this.columnManager);
		
		
		
		}

		public DataTable SelectDistinct(string FieldName)
		{	
			string[] FieldNames = new String[]{FieldName};
			return SelectDistinct(FieldNames);
		}

		public DataTable SelectDistinct(string[] FieldNames)
		{	
			bool missMatch = false;
			DataTable dt = new DataTable("distinct_values");
			string fieldNameList = "";
			for(int i=0;i<FieldNames.Length;i++)
			{
				fieldNameList += FieldNames[i];
				if(i!= FieldNames.Length-1)
					fieldNameList += ",";
			}
			
			for(int i=0;i<FieldNames.Length;i++)
			{
				dt.Columns.Add(FieldNames[i], this.Columns[FieldNames[i]].DataType);
			}
			
			object[] LastValue = new object[FieldNames.Length];
			
			foreach (DataRow dr in this.Select("", fieldNameList))
			{
				for(int i=0;i<FieldNames.Length;i++)
				{
					if (  LastValue[i] == null || !(ColumnEqual(LastValue[i], dr[FieldNames[i]])) ) 
					{
						missMatch = true;
						for(int j=0;j<FieldNames.Length;j++)
						{
							LastValue[j] = dr[FieldNames[j]]; 
						}
						break;
					}
				}

				if(missMatch)
				{
					DataRow tmpRow = dt.NewRow();
					for(int i=0;i<FieldNames.Length;i++)
					{
						tmpRow[FieldNames[i]] = LastValue[i];
					}
					dt.Rows.Add(tmpRow);
					missMatch = false;
				}
			}
			return dt;
		}
		
		
		public DataTable SelectDistinct(DataColumn[] DistinctColumns)
		{
			bool missMatch = false;
			DataTable dt = new DataTable("distinct_values");
			string fieldNameList = "";
			for(int i=0;i<DistinctColumns.Length;i++)
			{
				fieldNameList += DistinctColumns[i].ColumnName;
				if(i!= DistinctColumns.Length-1)
					fieldNameList += ",";
			}
			
			for(int i=0;i<DistinctColumns.Length;i++)
			{
				dt.Columns.Add(DistinctColumns[i].ColumnName,DistinctColumns[i].DataType);
			}
			
			object[] LastValue = new object[DistinctColumns.Length];
			
			foreach (DataRow dr in this.Select("", fieldNameList))
			{
				for(int i=0;i<DistinctColumns.Length;i++)
				{
					if (  LastValue[i] == null || !(ColumnEqual(LastValue[i], dr[DistinctColumns[i]])) ) 
					{
						missMatch = true;
						for(int j=0;j<DistinctColumns.Length;j++)
						{
							LastValue[j] = dr[DistinctColumns[j]]; 
						}
						break;
					}
				}
				if(missMatch)
				{
					DataRow tmpRow = dt.NewRow();
					for(int i=0;i<DistinctColumns.Length;i++)
					{
						tmpRow[DistinctColumns[i].ColumnName] = LastValue[i];
					}
					dt.Rows.Add(tmpRow);
					missMatch = false;
				}
			}
			return dt;
		}

		public DataTable SelectDistinct(DataColumn DistinctColumn)
		{
			DataColumn[] DistinctColumns = new DataColumn[]{DistinctColumn};
			return SelectDistinct(DistinctColumns);
		}


		private bool ColumnEqual(object A, object B)
		{
			if (A == System.DBNull.Value && B == System.DBNull.Value)
				 return true; 
			if ( A == System.DBNull.Value || B == System.DBNull.Value ) 
				return false; 
			return ( A.Equals(B) );  
		}


		public bool ImportRows(DataRow[] SourceRows)
		{
			bool importError = false;
			for(int i=0;i<SourceRows.Length;i++)
			{
				try
				{
					this.ImportRow(SourceRows[i]);
				}
				catch(Exception e)
				{
					importError = true;
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTable.ImportRows(DataRow[]) Method",e);
				}					
				
				
			}
			return importError;
		}
		
		public bool ImportRows( ADGroupMembersTableRow[] SourceRows)
		{
			bool importError = false;
			for(int i=0;i<SourceRows.Length;i++)
			{
				try
				{
					this.ImportRow( (DataRow)SourceRows[i]);
				}
				catch(Exception e)
				{
					importError = true;
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTable.ImportRows(ADGroupMembersTableRow[]) Method",e);
				}					

				
			}
			return importError;
		}
		
		
		//private Exception myLastException;
		//public Exception GetLastException()
		//{
		//	return myLastException;
		//}
		
		public new System.Data.DataRowCollection Rows
		{
			get
			{
				return base.Rows;
			}
		
		}
		
		public virtual bool Fill(string fixedString)
		{
		
		ADGroupMembersTableRow newRow = (ADGroupMembersTableRow)this.NewRow();
			try
			{	
				this.Rows.Add(newRow);
			}
			catch(Exception e)
			{
				throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTable.Fill(string) Method",e);
			}
			return true;
		
		}

	}
	public class ADGroupMembersTableRow : DataRow 
	{
		private ADGroupMembersTable tableADGroupMembersTable;
		internal ADGroupMembersTableRow(DataRowBuilder rb) : base(rb)
		{
			this.tableADGroupMembersTable = ((ADGroupMembersTable)(this.Table));
		}
		
		public String LastName
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.LastNameColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.LastName property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.LastNameColumn] = value;
			}
		}
		
		public String FirstName
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.FirstNameColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.FirstName property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.FirstNameColumn] = value;
			}
		}
		
		public String AccountId
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.AccountIdColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.AccountId property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.AccountIdColumn] = value;
			}
		}
		
		public String Title
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.TitleColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.Title property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.TitleColumn] = value;
			}
		}
		
		public String EMail
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.EMailColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.EMail property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.EMailColumn] = value;
			}
		}
		
		public String Phone
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.PhoneColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.Phone property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.PhoneColumn] = value;
			}
		}
		
		public String DistinguishedName
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.DistinguishedNameColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.DistinguishedName property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.DistinguishedNameColumn] = value;
			}
		}
		
		public String Country
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.CountryColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.Country property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.CountryColumn] = value;
			}
		}
		
		public String StateProv
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.StateProvColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.StateProv property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.StateProvColumn] = value;
			}
		}
		
		public String City
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.CityColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.City property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.CityColumn] = value;
			}
		}
		
		public String StreetAddress
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.StreetAddressColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.StreetAddress property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.StreetAddressColumn] = value;
			}
		}
		
		public String PostalCode
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.PostalCodeColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.PostalCode property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.PostalCodeColumn] = value;
			}
		}
		
		public String Business2Phone
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.Business2PhoneColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.Business2Phone property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.Business2PhoneColumn] = value;
			}
		}
		
		public String ManagerDN
		{
			get
			{
				try
				{
					return ((String)(this[this.tableADGroupMembersTable.ManagerDNColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.ManagerDN property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.ManagerDNColumn] = value;
			}
		}
		
		public int UserAccountControl
		{
			get
			{
				try
				{
					return ((int)(this[this.tableADGroupMembersTable.UserAccountControlColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.UserAccountControl property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.UserAccountControlColumn] = value;
			}
		}
		
		public string AccountFlags
		{
			get
			{
				try
				{
					return ((string)(this[this.tableADGroupMembersTable.AccountFlagsColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.AccountFlags property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.AccountFlagsColumn] = value;
			}
		}
		
		public int AccountControlComputed
		{
			get
			{
				try
				{
					return ((int)(this[this.tableADGroupMembersTable.AccountControlComputedColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.AccountControlComputed property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.AccountControlComputedColumn] = value;
			}
		}
		
		public string AccountFlagsComputed
		{
			get
			{
				try
				{
					return ((string)(this[this.tableADGroupMembersTable.AccountFlagsComputedColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.AccountFlagsComputed property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.AccountFlagsComputedColumn] = value;
			}
		}
		
		public string ObjectSID
		{
			get
			{
				try
				{
					return ((string)(this[this.tableADGroupMembersTable.ObjectSIDColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.ObjectSID property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.ObjectSIDColumn] = value;
			}
		}
		
		public string ObjectGUID
		{
			get
			{
				try
				{
					return ((string)(this[this.tableADGroupMembersTable.ObjectGUIDColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.ObjectGUID property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.ObjectGUIDColumn] = value;
			}
		}
		
		public DateTime AccountCreated
		{
			get
			{
				try
				{
					return ((DateTime)(this[this.tableADGroupMembersTable.AccountCreatedColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.AccountCreated property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.AccountCreatedColumn] = value;
			}
		}
		
		public DateTime AccountLastModified
		{
			get
			{
				try
				{
					return ((DateTime)(this[this.tableADGroupMembersTable.AccountLastModifiedColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.AccountLastModified property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.AccountLastModifiedColumn] = value;
			}
		}
		
		public string SearchedDomain
		{
			get
			{
				try
				{
					return ((string)(this[this.tableADGroupMembersTable.SearchedDomainColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.SearchedDomain property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.SearchedDomainColumn] = value;
			}
		}
		
		public string AccountStatus
		{
			get
			{
				try
				{
					return ((string)(this[this.tableADGroupMembersTable.AccountStatusColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.AccountStatus property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.AccountStatusColumn] = value;
			}
		}
		
		public string Office
		{
			get
			{
				try
				{
					return ((string)(this[this.tableADGroupMembersTable.OfficeColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.Office property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.OfficeColumn] = value;
			}
		}
		
		public string Description
		{
			get
			{
				try
				{
					return ((string)(this[this.tableADGroupMembersTable.DescriptionColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.Description property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.DescriptionColumn] = value;
			}
		}
		
		public string Department
		{
			get
			{
				try
				{
					return ((string)(this[this.tableADGroupMembersTable.DepartmentColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.Department property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.DepartmentColumn] = value;
			}
		}
		
		public string HomePhone
		{
			get
			{
				try
				{
					return ((string)(this[this.tableADGroupMembersTable.HomePhoneColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.HomePhone property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.HomePhoneColumn] = value;
			}
		}
		
		public int Rank
		{
			get
			{
				try
				{
					return ((int)(this[this.tableADGroupMembersTable.RankColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.Rank property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.RankColumn] = value;
			}
		}
		
		public ADGroupMembersTableRow Manager
		{
			get
			{
				try
				{
					return ((ADGroupMembersTableRow)(this[this.tableADGroupMembersTable.ManagerColumn]));
				}
				catch(InvalidCastException e)
				{
					throw new System.ApplicationException("Error in Auto-Generated: ADGroupMembersTableRow.Manager property. Underlying value is System.DbNull",e);
				}
			}
			set
			{
				this[this.tableADGroupMembersTable.ManagerColumn] = value;
			}
		}
		
		public bool SyncRowValues(DataRow SourceRow)
		{
			bool syncErrors = false;
			
			try
			{
				this[this.tableADGroupMembersTable.LastNameColumn] = SourceRow["LastName"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.FirstNameColumn] = SourceRow["FirstName"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.AccountIdColumn] = SourceRow["AccountId"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.TitleColumn] = SourceRow["Title"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.EMailColumn] = SourceRow["EMail"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.PhoneColumn] = SourceRow["Phone"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.DistinguishedNameColumn] = SourceRow["DistinguishedName"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.CountryColumn] = SourceRow["Country"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.StateProvColumn] = SourceRow["StateProv"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.CityColumn] = SourceRow["City"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.StreetAddressColumn] = SourceRow["StreetAddress"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.PostalCodeColumn] = SourceRow["PostalCode"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.Business2PhoneColumn] = SourceRow["Business2Phone"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.ManagerDNColumn] = SourceRow["ManagerDN"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.UserAccountControlColumn] = SourceRow["UserAccountControl"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.AccountFlagsColumn] = SourceRow["AccountFlags"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.AccountControlComputedColumn] = SourceRow["AccountControlComputed"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.AccountFlagsComputedColumn] = SourceRow["AccountFlagsComputed"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.ObjectSIDColumn] = SourceRow["ObjectSID"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.ObjectGUIDColumn] = SourceRow["ObjectGUID"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.AccountCreatedColumn] = SourceRow["AccountCreated"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.AccountLastModifiedColumn] = SourceRow["AccountLastModified"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.SearchedDomainColumn] = SourceRow["SearchedDomain"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.AccountStatusColumn] = SourceRow["AccountStatus"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.OfficeColumn] = SourceRow["Office"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.DescriptionColumn] = SourceRow["Description"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.DepartmentColumn] = SourceRow["Department"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.HomePhoneColumn] = SourceRow["HomePhone"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.RankColumn] = SourceRow["Rank"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			try
			{
				this[this.tableADGroupMembersTable.ManagerColumn] = SourceRow["Manager"];
			}
			catch(Exception e)
			{
				syncErrors = true;
				throw new System.ApplicationException("Error in Auto-Generated: SyncRowValues(DataRow) Method",e);
			}
			
			return syncErrors;
		
		}
		
		public bool SyncRowValues(ADGroupMembersTableRow SourceRow)
		{
			return SyncRowValues( (DataRow)SourceRow);
		}
	}

}